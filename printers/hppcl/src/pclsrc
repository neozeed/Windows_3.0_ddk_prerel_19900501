# PCLSRC
# makefile for HPPCL.DRV .OBJ files
# Copyright (C) 1989-1990 Microsoft Corp.

CC=cl

LINK=link

LIBRARIAN=lib

STDOPTS=-W2 -u -c -Asnw -PLM -Gsw -Oas -Zpe

INCDIR=..\ink\\

heap.obj: heap.a
	MASM -I$(INCDIR) heap.a;

lmemcpy.obj: lmemcpy.a
	MASM -I$(INCDIR) lmemcpy.a;

lstrncpy.obj: lstrncpy.a
	MASM -I$(INCDIR) lstrncpy.a;

lmemset.obj: lmemset.a
	MASM -I$(INCDIR) lmemset.a;

offsrect.obj: offsrect.a
	MASM -I$(INCDIR) offsrect.a;

# Use DUMP.A _or_ DUMP.C+DUMPUTIL.A, but not both ***************************
#
# We now compile both, to generate both drivers.
# dumpa.obj: dump.a $(INCDIR)device.i
# 	MASM -I$(INCDIR) dump.a, dumpa.obj;

# utilities for enhanced DUMP.C.  Depends on CMACROS.INC, GDIDEFS.INC

dumputil.obj: dumputil.a $(INCDIR)device.i
	MASM -I$(INCDIR) dumputil.a;

# WEP() function
wep.obj: wep.a
	MASM -I$(INCDIR) wep.a;

# not in 3.00 version.
#lasport.obj: lasport.a $(INCDIR)device.i $(INCDIR)ve_stack.i $(INCDIR)int31.i
#	MASM -I$(INCDIR) lasport.a;

_write.obj: _write.a
	MASM -I$(INCDIR) _write.a;

facetbl.obj: facetbl.a
	MASM -I$(INCDIR) facetbl.a;

charwdth.obj: charwdth.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)fontman.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _CHARNESC charwdth.c

control.obj: control.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)strings.h \
$(INCDIR)spool.h \
$(INCDIR)fontman.h \
$(INCDIR)memoman.h \
$(INCDIR)environ.h \
$(INCDIR)utils.h \
$(INCDIR)dump.h \
$(INCDIR)extescs.h \
$(INCDIR)paper.h \
message.c \
lockfont.c \
makefsnm.c \
loadfile.c
    $(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _ESCAPE control.c

debug.obj: debug.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) debug.c
	$(LIBRARIAN) debug-+debug.obj;

devcap.obj: devcap.c \
$(INCDIR)nocrap.h \
$(INCDIR)hppcl.h \
$(INCDIR)resource.h \
$(INCDIR)debug.h \
$(INCDIR)environ.h \
$(INCDIR)utils.h \
$(INCDIR)paperfmt.h \
$(INCDIR)paper.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _DEVCAP devcap.c

devmode.obj: devmode.c \
$(INCDIR)nocrap.h \
$(INCDIR)pfm.h \
$(INCDIR)hppcl.h \
$(INCDIR)resource.h \
$(INCDIR)fontman.h \
$(INCDIR)strings.h \
$(INCDIR)debug.h \
$(INCDIR)dlgutils.h \
$(INCDIR)environ.h \
$(INCDIR)utils.h \
$(INCDIR)paperfmt.h \
$(INCDIR)paper.h \
$(INCDIR)lclstr.h \
getint.c
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _DEVMODE devmode.c

dlgutils.obj: dlgutils.c \
$(INCDIR)nocrap.h \
$(INCDIR)debug.h \
$(INCDIR)dlgutils.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _DEVMODE dlgutils.c

# Use DUMP.A _or_ DUMP.C, but not both ************************************
#
dump.obj: dump.c \
 $(INCDIR)generic.h  $(INCDIR)printer.h  $(INCDIR)hppcl.h  $(INCDIR)debug.h \
 $(INCDIR)pfm.h  $(INCDIR)paperfmt.h  $(INCDIR)device.h  $(INCDIR)resource.h \
 $(INCDIR)fontman.h  $(INCDIR)strings.h  $(INCDIR)memoman.h  $(INCDIR)dump.h
	 $(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _DUMP dump.c


enumobj.obj: enumobj.c
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _STUBS enumobj.c

environ.obj: environ.c \
$(INCDIR)country.h \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)strings.h \
$(INCDIR)environ.h \
$(INCDIR)utils.h \
$(INCDIR)version.h \
$(INCDIR)lclstr.h \
getint.c
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _ENVIRON environ.c

escquery.obj: escquery.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)extescs.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _CHARNESC escquery.c

fntutils.obj: fntutils.c \
$(INCDIR)nocrap.h \
$(INCDIR)fntutils.h \
$(INCDIR)neededh.h \
$(INCDIR)debug.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _FNTUTILS fntutils.c

fontbld.obj: fontbld.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)fontman.h \
$(INCDIR)fonts.h \
$(INCDIR)debug.h \
$(INCDIR)strings.h \
$(INCDIR)memoman.h \
$(INCDIR)fontpriv.h \
$(INCDIR)utils.h \
$(INCDIR)lclstr.h \
getint.c
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _FONTBLD fontbld.c

fontman.obj: fontman.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)fontman.h \
$(INCDIR)fonts.h \
$(INCDIR)debug.h \
$(INCDIR)strings.h \
$(INCDIR)fontpriv.h \
$(INCDIR)environ.h \
$(INCDIR)utils.h \
$(INCDIR)lclstr.h \
lockfont.c
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _RESET fontman.c

fontutil.obj: fontutil.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)fontman.h \
$(INCDIR)fonts.h \
$(INCDIR)utils.h \
$(INCDIR)memoman.h \
$(INCDIR)debug.h \
lockfont.c \
makefsnm.c \
loadfile.c
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _CHARNESC fontutil.c

lclstr.obj: lclstr.c \
$(INCDIR)version.h \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) lclstr.c

memoman.obj: memoman.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)fontman.h \
$(INCDIR)utils.h \
$(INCDIR)memoman.h \
lockfont.c \
makefsnm.c
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _PHYSICAL memoman.c

options.obj: options.c \
$(INCDIR)nocrap.h \
$(INCDIR)hppcl.h \
$(INCDIR)resource.h \
$(INCDIR)strings.h \
$(INCDIR)dlgutils.h \
$(INCDIR)debug.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _OPTIONS options.c

paper.obj: paper.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)environ.h \
$(INCDIR)paperfmt.h \
$(INCDIR)paper.h \
$(INCDIR)debug.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _PAPER paper.c

physical.obj: physical.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)fontman.h \
$(INCDIR)strings.h \
$(INCDIR)utils.h \
$(INCDIR)memoman.h \
$(INCDIR)transtbl.h \
message.c
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _PHYSICAL physical.c

qsort.obj: qsort.c \
$(INCDIR)pfm.h \
$(INCDIR)qsort.h \
$(INCDIR)debug.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _ESCAPE qsort.c

realize.obj: realize.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)fontman.h \
$(INCDIR)fonts.h \
lockfont.c
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _REALIZE realize.c

reset.obj: reset.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)fontman.h \
$(INCDIR)strings.h \
$(INCDIR)environ.h \
$(INCDIR)utils.h \
$(INCDIR)dump.h \
$(INCDIR)paper.h \
$(INCDIR)version.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _RESET reset.c

stubs.obj: stubs.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)fontman.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _STUBS stubs.c

transtbl.obj: transtbl.c \
$(INCDIR)nocrap.h \
$(INCDIR)pfm.h \
$(INCDIR)transtbl.h \
$(INCDIR)hppcl.h \
$(INCDIR)resource.h \
$(INCDIR)debug.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _TRANSTBL transtbl.c

utils.obj: utils.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)utils.h \
$(INCDIR)debug.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) utils.c

pclstub.obj: pclstub.c \
$(INCDIR)printer.h \
$(INCDIR)dosutils.h \
$(INCDIR)fontpriv.h \
$(INCDIR)hppcl.h \
$(INCDIR)resource.h \
$(INCDIR)version.h \
$(INCDIR)pfm.h
	$(CC) -I$(INCDIR) -W2 -c pclstub.c

pclstub.exe: pclstub.obj \
_write.obj
	$(LINK) pclstub+_write.obj,pclstub,,slibce;
	copy pclstub.exe ..
